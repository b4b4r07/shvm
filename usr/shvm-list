#!/bin/sh
set -e

remote_list() {
  if [ -z "$1" ]; then
    help
    exit 1
  fi

  if [ ! -d "$SHVM_HOME/usr/$1-support" ] || [ ! -x "$SHVM_HOME/usr/$1-support/list" ]; then
    echo "$1 not supported"
    exit 1
  fi

  "$SHVM_HOME/usr/$1-support/list"
}

current_version() {
  current_bash_path=$(which bash)
  case "$current_bash_path" in
  $SHVM_HOME/lib/bash-*)
    # current version is in shvm
    current="${current_bash_path#$SHVM_HOME/lib/}"
    current="${current%/bin/bash}"
    echo "$current"
    ;;
  *)
    # current version is system
    echo 'system'
    ;;
  esac
}

local_list() {
  current=$(current_version)
  ls -Ad "$SHVM_HOME"/lib/* >/dev/null 2>&1 || exit 0
  echo
  for fullpath in $SHVM_HOME/lib/*; do
    version=$(basename "$fullpath")
    if [ "$version" = "$current" ]; then
      echo "=> $version"
    else
      echo "   $version"
    fi
  done
  echo
  echo "# => - current"
}

support_list() {
  for dir in $SHVM_HOME/usr/*-support; do
    [ -e "$dir" ] || break

    dir=$(basename "$dir")
    echo "${dir%-support}"
  done
}

help() {
  cat <<EOF
Usage: shvm list [local]
   or: shvm list remote <target>
   or: shvm support

Avairable commands for shvm list

  local     Show installed shell list in local (default)
  remote    Show shell versions of the target able to install
  support   Show supported shell types
EOF
}

if [ $# -eq 0 ]; then
  local_list
  exit 0
fi

case "$1" in
remote)
  shift
  remote_list "$1"
  ;;
local)
  local_list
  ;;
support)
  support_list
  ;;
--help)
  shift
  help
  ;;
-*|--*)
  echo >&2 "Unrecognized option: $1"
  exit 1
  ;;
*)
  echo >&2 "Unrecognized command: $1"
  exit 1
  ;;
esac
