#!/usr/bin/env bash

remote_list() {
  local bash_list=$(2>/dev/null curl -l  'ftp://ftp.gnu.org/gnu/bash/' | grep '^bash-.*.tar.gz$' | grep -v -- '-doc-')
  local version
  for version in $bash_list; do
    echo ${version%.tar.gz}
  done
}

default_version() {
  local default=$(readlink $BASHVM_HOME/bin/bash)
  default=${default#../}
  default=${default%/bin/bash}
  echo $default
}

current_version() {
  local current_bash_path=$(which bash)
  if ! [[ "$current_bash_path" =~ $BASHVM_HOME ]]; then
    # system version such as /usr/bin/bash
    return
  elif [[ "$current_bash_path" = $BASHVM_HOME/bin/bash ]]; then
    # current version = default version
    default_version
  else
    # current version is temporary changed
    local current=${current_bash_path#$BASHVM_HOME/}
    current=${current%/bin/bash}
    echo $current
  fi
}

local_list() {
  local default=$(default_version)
  local current=$(current_version)
  local fullpath;
  echo
  for fullpath in $(ls -d $BASHVM_HOME/bash-*); do
    local version=$(basename $fullpath)
    if [[ "$version" == "$current" && "$version" == "$default" ]]; then
      echo "=* $version"
    elif [[ "$version" == "$default" ]]; then
      echo " * $version"
    elif [[ "$version" == "$current" ]]; then
      echo "=> $version"
    else
      echo "   $version"
    fi
  done
  echo
  echo "# => - current"
  echo "# =* - current && default"
  echo "#  * - default"
}

help() {
  echo -n "\
Usage: bashvm list [command]

Avairable commands for bashvm list

  local     Show installed bash list in local (default)
  remote    Show bash list which able to install
"
}

if [[ $# -eq 0 ]]; then
  local_list
  exit 0
fi

case "$1" in
remote)
  remote_list
  ;;
local)
  local_list
  ;;
--help)
  shift
  help
  ;;
-*|--*)
  bashvm_die "Unrecognized option: $1"
  exit 1
  ;;
*)
  bashvm_die "Unrecognized command: $1"
  exit 1
  ;;
esac
