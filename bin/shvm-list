#!/bin/sh
set -e

remote_list() {
  bash_list=$(2>/dev/null curl -l 'ftp://ftp.gnu.org/gnu/bash/' | grep '^bash-.*.tar.gz$' | grep -v -- '-doc-')
  for version in $bash_list; do
    echo "${version%.tar.gz}"
  done
}

current_version() {
  current_bash_path=$(which bash)
  case "$current_bash_path" in
  $SHVM_HOME/usr/bash-*)
    # current version is in shvm
    current="${current_bash_path#$SHVM_HOME/usr/bash-}"
    current="${current%/bin/bash}"
    echo "$current"
    ;;
  *)
    # current version is system
    echo 'system'
    ;;
  esac
}

local_list() {
  current=$(current_version)
  ls -Ad "$SHVM_HOME"/usr/* >/dev/null 2>&1 || exit 0
  echo
  for fullpath in $SHVM_HOME/usr/*; do
    version=$(basename "$fullpath")
    version="${version#bash-}"
    if [ "$version" = "$current" ] && [ "$version" = "$SHVM_DEFAULT_VERSION" ]; then
      echo "=* bash-$version"
    elif [ "$version" = "$SHVM_DEFAULT_VERSION" ]; then
      echo " * bash-$version"
    elif [ "$version" = "$current" ]; then
      echo "=> bash-$version"
    else
      echo "   bash-$version"
    fi
  done
  echo
  echo "# => - current"
  echo "# =* - current && default"
  echo "#  * - default"
}

help() {
  cat <<EOF
Usage: shvm list [command]

Avairable commands for shvm list

  local     Show installed bash list in local (default)
  remote    Show bash list which able to install
EOF
}

if [ $# -eq 0 ]; then
  local_list
  exit 0
fi

case "$1" in
remote)
  remote_list
  ;;
local)
  local_list
  ;;
--help)
  shift
  help
  ;;
-*|--*)
  echo >&2 "Unrecognized option: $1"
  exit 1
  ;;
*)
  echo >&2 "Unrecognized command: $1"
  exit 1
  ;;
esac
