#!/usr/bin/env bash
set -e

remote_list() {
  local bash_list=$(2>/dev/null curl -l 'ftp://ftp.gnu.org/gnu/bash/' | grep '^bash-.*.tar.gz$' | grep -v -- '-doc-')
  local version
  for version in $bash_list; do
    echo ${version%.tar.gz}
  done
}

current_version() {
  local current_bash_path=$(which bash)
  if [[ "$current_bash_path" =~ $SHVM_HOME/usr/bash- ]]; then
    # current version is in shvm
    local current=${current_bash_path#$SHVM_HOME/usr/bash-}
    current=${current%/bin/bash}
    echo $current
  else
    # current version is system
    echo 'system'
  fi
}

local_list() {
  local current=$(current_version)
  local fullpath;
  ls -Ad $SHVM_HOME/usr/* >/dev/null 2>&1 || exit 0
  echo
  for fullpath in $SHVM_HOME/usr/*; do
    local version=$(basename $fullpath)
    version=${version#bash-}
    if [[ "$version" == "$current" && "$version" == "$SHVM_DEFAULT_VERSION" ]]; then
      echo "=* bash-$version"
    elif [[ "$version" == "$SHVM_DEFAULT_VERSION" ]]; then
      echo " * bash-$version"
    elif [[ "$version" == "$current" ]]; then
      echo "=> bash-$version"
    else
      echo "   bash-$version"
    fi
  done
  echo
  echo "# => - current"
  echo "# =* - current && default"
  echo "#  * - default"
}

help() {
  cat <<EOF
Usage: shvm list [command]

Avairable commands for shvm list

  local     Show installed bash list in local (default)
  remote    Show bash list which able to install
EOF
}

if [[ $# -eq 0 ]]; then
  local_list
  exit 0
fi

case "$1" in
remote)
  remote_list
  ;;
local)
  local_list
  ;;
--help)
  shift
  help
  ;;
-*|--*)
  shvm_die "Unrecognized option: $1"
  exit 1
  ;;
*)
  shvm_die "Unrecognized command: $1"
  exit 1
  ;;
esac
